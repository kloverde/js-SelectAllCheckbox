/*
 * SelectAllCheckbox v1.0
 * https://www.github.com/kloverde/js-SelectAllCheckbox
 *
 * Donations:  https://paypal.me/KurtisLoVerde/5
 *
 * Copyright (c) 2020, Kurtis LoVerde
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of the copyright holder nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

class CheckboxGroup{constructor(e,c,t){const o=document.getElementById(e);function h(e,c){c===CheckboxGroup.GROUP_STATE_SOME?(o.checked=!1,o.indeterminate=!0):c===CheckboxGroup.GROUP_STATE_ALL?(o.indeterminate=!1,o.checked=!0):c===CheckboxGroup.GROUP_STATE_NONE&&(o.indeterminate=!1,o.checked=!1),e.state=c}this.name=c,o.addEventListener("click",e=>{const c=this.checkboxElements,o=c.filter(e=>!e.disabled),n=o.filter(e=>!e.checked).length>0,r=[];let l=0;o.forEach(e=>{e.checked!==n&&(e.checked=n,r.push(e))}),c.forEach(e=>{e.checked&&l++});let i=null;if(0===l)i=CheckboxGroup.GROUP_STATE_NONE;else if(l<c.length)i=CheckboxGroup.GROUP_STATE_SOME;else{if(l!==c.length)throw"Impossible result:  more checkboxes checked than actually exist";i=CheckboxGroup.GROUP_STATE_ALL}h(this,i),r.length>0&&"function"==typeof t&&t(r,i)}),this.checkboxElements.forEach(function(e){e.addEventListener("change",c=>{let o=!1,n=!1,r=CheckboxGroup.GROUP_STATE_NONE;if(this.checkboxElements.forEach(e=>{e.checked?o=!0:n=!0}),o&&n?r=CheckboxGroup.GROUP_STATE_SOME:o&&!n?r=CheckboxGroup.GROUP_STATE_ALL:o||(r=CheckboxGroup.GROUP_STATE_NONE),h(this,r),"function"==typeof t){t([e],r)}})},this),function(e){let c=e.checkboxElements,t=0,o=null;c.forEach(function(e){if(e.checked&&t++,0===t)o=CheckboxGroup.GROUP_STATE_NONE;else if(t<c.length)o=CheckboxGroup.GROUP_STATE_SOME;else{if(t!==c.length)throw"Impossible result:  more checkboxes checked than actually exist";o=CheckboxGroup.GROUP_STATE_ALL}h(this,o)},e)}(this)}get checkboxElements(){return Array.from(document.querySelectorAll("input[type='checkbox'][name='"+this.name+"']"))}}Object.defineProperty(CheckboxGroup,"GROUP_STATE_NONE",{value:"none",writable:!1}),Object.defineProperty(CheckboxGroup,"GROUP_STATE_SOME",{value:"some",writable:!1}),Object.defineProperty(CheckboxGroup,"GROUP_STATE_ALL",{value:"all",writable:!1});
